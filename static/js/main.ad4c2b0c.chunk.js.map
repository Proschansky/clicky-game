{"version":3,"sources":["cats.js","components/Image.js","components/Header.js","components/Wrapper.js","components/Score.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","id","name","image","newPicture","props","react_default","a","createElement","className","src","alt","onClick","handleClick","Header","role","Component","Wrapper","children","Score","score","goal","message","App","state","Cats","clicked","console","log","_this","includes","setState","length","i","j","Math","floor","random","_ref","concat","Object","toConsumableArray","_this2","this","Header_Header","components_Score","components_Wrapper","map","cat","Image","key","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad4c2b0c.chunk.js","sourcesContent":["module.exports = [\r\n    {\r\n      \"id\": 1,\r\n      \"name\": \"Cat Eye\",\r\n      \"image\": \"https://upload.wikimedia.org/wikipedia/commons/6/69/June_odd-eyed-cat_cropped.jpg\"\r\n    },\r\n    {\r\n        \"id\": 2,\r\n        \"name\": \"Mad Catter\",\r\n        \"image\": \"https://i.ytimg.com/vi/Vfh_6df07eg/maxresdefault.jpg\"\r\n    },\r\n    {\r\n        \"id\": 3,\r\n        \"name\": \"Pepper Cat\",\r\n        \"image\": \"https://i.pinimg.com/originals/98/ff/fc/98fffc34e4f118d56dc674a9290c819a.jpg\"\r\n    },\r\n    {\r\n        \"id\": 4,\r\n        \"name\": \"Main Coon Cat\",\r\n        \"image\": \"https://cache.desktopnexus.com/thumbseg/641/641775-bigthumbnail.jpg\"\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"name\": \"Scaredy Cat\",\r\n        \"image\": \"https://knowyourphrase.com/wp-content/uploads/2019/02/little-scaredy-cat.jpg\"\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"name\": \"Cat-A-Tonic\",\r\n        \"image\": \"https://farm9.static.flickr.com/8164/7379991430_44f32a447b_b.jpg\"\r\n      },\r\n      {\r\n          \"id\": 7,\r\n          \"name\": \"Cat-A-Ract\",\r\n          \"image\": \"https://i.redd.it/fsun3of264d21.jpg\"\r\n      },\r\n      {\r\n          \"id\": 8,\r\n          \"name\": \"Cat Stevens\",\r\n          \"image\": \"https://cdn.shopify.com/s/files/1/0036/1457/2588/products/product-image-406922988_480x480.jpg?v=1525644323\"\r\n      },\r\n      {\r\n          \"id\": 9,\r\n          \"name\": \"Cat-Fish\",\r\n          \"image\": \"https://i.pinimg.com/236x/69/48/47/694847f0237513a5583553d8ac3ba228--shark-hat-cat-shark.jpg\"\r\n      },\r\n      {\r\n          \"id\": 10,\r\n          \"name\": \"Tin-Foil-Cat\",\r\n          \"image\": \"https://cdn.shopify.com/s/files/1/1365/2497/files/redcat_large.jpg?v=1522243551\"\r\n      },\r\n      {\r\n        \"id\": 11,\r\n        \"name\": \"Ragdoll-Cat\",\r\n        \"image\": \"https://images-na.ssl-images-amazon.com/images/I/41i0MZuB9wL._SX425_.jpg\"\r\n      }\r\n\r\n]","import React from \"react\";\r\n\r\n\r\nfunction newPicture(props){\r\n\r\n   return(\r\n       <div className = \"card\">\r\n            <img className = \"picture\"\r\n            src={props.image} \r\n            alt={props.name}\r\n            onClick={()=> props.handleClick(props.id)}\r\n            />\r\n       </div>\r\n   );\r\n};\r\n\r\nexport default newPicture;","import React, { Component } from 'react';\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"jumbotron bg-primary\" role=\"alert\">\r\n              <h4 className=\"heading\">Click-A-Cat</h4>\r\n              <p>Click each image, but only once!</p>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }","import React from \"react\";\r\n\r\n//stateless component\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;","import React from \"react\";\r\n\r\n//stateless component\r\nconst Score = props => (\r\n  <div className=\"gameScore\">\r\n    <h3 className=\"score\">Your score is {props.score}</h3>\r\n    <h3 className=\"goal\">Your goal is {props.goal}</h3>\r\n    <h3 className=\"message\">{props.message}</h3>\r\n  </div>\r\n);\r\n\r\nexport default Score;","import React, { Component } from \"react\";\nimport Image from \"./components/Image\";\nimport Header from './components/Header'\nimport Wrapper from \"./components/Wrapper\";\nimport Score from \"./components/Score\";\nimport Cats from \"./cats\";\nimport \"./App.css\";\n\nclass App extends Component {\n  // Setting this.state.pups to the cards json array\n  state = {\n    Cats,\n    score: 0,\n    clicked: [],\n    message: \"Click to play\"\n  };\n\n  //shuffles the cat pictures when clicked\n  handleClick = id => {\n    console.log(id);\n    const clicked = this.state.clicked;\n    console.log(clicked)\n\n    if(clicked.includes(id)){\n      this.setState({ clicked: [], score: 0, message:  \"You clicked a cat twice! Try again!\" });\n      return;\n    }\n\n    else if (clicked.length === Cats.length){\n      this.setState({score: Cats.length, message: \"You clicked all the cats\", clicked: []});\n      console.log('You Win');\n      return;\n    }\n    \n    else {\n\n      for (let i = Cats.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [Cats[i], Cats[j]] = [Cats[j], Cats[i]];\n      }\n      this.setState({ Cats: Cats, clicked: [id, ...this.state.clicked], score: this.state.clicked.length, message: \"Good Job! You picked a new cat!\" });\n      return;\n    }\n  }\n  // Map over this.state.cards and render an image component for each cat object\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Score score={this.state.score}\n               goal= {Cats.length}\n               message={this.state.message}\n               />\n        <Wrapper>\n          {this.state.Cats.map(cat => (\n            <Image\n              handleClick={this.handleClick}\n              id={cat.id}\n              key={cat.id}\n              image={cat.image}\n            />\n          ))}\n        </Wrapper>\n    </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}